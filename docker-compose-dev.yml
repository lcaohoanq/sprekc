services:

  postgres:
    image: postgres:latest
    container_name: postgres_movies
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U "${POSTGRES_USER:-admin}"' ]
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - springboot-react-keycloak-net
    secrets:
      - postgres_password
    volumes:
      - postgres_movies_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

#  pgadmin:
#    image: dpage/pgadmin4:latest
#    container_name: pgadmin_movies
#    environment:
#      PGADMIN_DEFAULT_EMAIL: hoangclw@gmail.com
#      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/pgadmin_password
#    ports:
#      - "80:80"
#    networks:
#      - springboot-react-keycloak-net
#    secrets:
#      - pgadmin_password
#    depends_on:
#      - postgres

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - client
      - server-api
      - keycloak-configured
    networks:
      - springboot-react-keycloak-net

  keycloak-configured:
    container_name: keycloak-configured
    build:
      context: ./keycloak-custom
      dockerfile: Dockerfile
    command:
      - start-dev
      - --import-realm
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
      - keycloak_data:/opt/keycloak/data
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD_FILE: /run/secrets/keycloak_admin_password
      KC_HTTP_PORT: 8080
      KC_HOSTNAME_URL: http://localhost/auth
      KC_HOSTNAME_ADMIN_URL: http://localhost/auth
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_HTTP_RELATIVE_PATH: /
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      # KC_LOG_LEVEL: DEBUG

      # ⚠️ Đây là config kết nối DB PostgreSQL
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD_FILE: /run/secrets/postgres_password
      KC_DB_SCHEMA: public

    extra_hosts:
      - "host.docker.internal:host-gateway"
    #    depends_on:
    #      - postgres
    networks:
      - springboot-react-keycloak-net
    secrets:
      - keycloak_admin_password
      - postgres_password
    healthcheck:
      test: [ 'CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8080/auth/health/live' ]
      interval: 5s
      timeout: 5s
      retries: 20

  server-api:
    container_name: movies-api
    build:
      context: movies-api
      dockerfile: Dockerfile
    ports:
      - "9080:9080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_PASSWORD_FILE=/run/secrets/postgres_password
    depends_on:
      - postgres
    networks:
      - springboot-react-keycloak-net
    secrets:
      - postgres_password

  client:
    container_name: movies-ui
    build:
      context: ./movies-ui
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - springboot-react-keycloak-net
    depends_on:
      - server-api
      - keycloak-configured

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
#  pgadmin_password:
#    file: ./secrets/pgadmin_password.txt
  keycloak_admin_password:
    file: ./secrets/keycloak_admin_password.txt

volumes:
  postgres_movies_data:
    driver: local
  keycloak_data:
    driver: local

networks:
  springboot-react-keycloak-net:
    driver: bridge
